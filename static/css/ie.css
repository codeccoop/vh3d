.ie {
    /* display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column; */
    background-color: rgb(255, 230, 0);
    color: rgb(4, 41, 190);
    min-height: 100vh;
    position: relative;
    line-height: 1.4;
    padding-bottom: 50px;
}

.ie h1 {
    margin-bottom: 0px;
    font-size: 2.5em;
}

.ie p {
    margin-top: 0.1em;
    font-size: 1.05em;
    text-align: justify;
}

.ie .header {
    padding: 1.5em 3.5em 1.5em;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
}

.ie .header .logo-pla {
    position: absolute;
    width: 165px;
    height: 55px;
    top: 1.5em;
    left: 2em;
}

.ie .header .logo-vh {
    position: absolute;
    width: 210px;
    height: 65px;
    top: 1.5em;
    right: 2em;
}

.ie .main {
    font-size: 1em;
    padding-top: 10%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
}

.ie .main .text p.enter-btn {
    margin: 2em 0px;
    text-align: center;
}

.ie .main .text p.enter-btn .button {
    color: rgb(4, 41, 190);
    background: rgba(255, 255, 255, 0);
    font-weight: bold;
}

.ie .main .piece {
    display: none;
    position: absolute;
    z-index: 10;
    width: 200px;
    height: auto;
    left: calc(calc(100vw - 500px) / 2 - 210px);
    top: calc(10% + 165px);
}

.ie .main .text .link {
    text-align: center;
}

#useruri {
    text-align: center;
}

@media screen and (max-width: 1000px) {
    .ie .main .piece {
        top: calc(100% - 250px);
        left: calc(50vw - 100px);
    }

    .ie .footer {
        height: 300px;
    }
}

* {
    -webkit-box-sizing: border-box;
            box-sizing: border-box;
    font-family: 'Raleway', sans-serif;
}

:root {
    --cover-bg-color: #ffe600;
    --vh-dark-blue: #0429be;
    --vh-blue: #264EFA;
}

html, body {
    margin: 0;
    padding: 0px;
    min-height: 100%;
    -webkit-box-sizing: border-box;
            box-sizing: border-box;
    font-size: 18px;
    line-height: 1.7;
}

ul {
    padding: 0px;
    list-style: none;
}

.centered {
    text-align: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
}

.text {
    width: 500px;
    margin: 3em auto auto;
}

button.button {
    background: rgba(0, 0, 0, 0);
    border: 1px solid;
    border-radius: 5px;
    width: 300px;
    font-size: 1.2em;
    color: white;
    padding: .8em;
    cursor: pointer;
    -webkit-transition: background 300ms;
    transition: background 300ms;
}

button.button.black {
    background: #00000000;
    color: black;
}

button.button:hover {
    background: rgba(255, 255, 255, 0.4);
}

button.button.black:hover {
    background: rgba(0, 0, 0, 0.2);
}

@media only screen and (max-width: 700px) and (orientation: portrait) {
    .text {
        width: 300px;
    }

    button.button {
        width: 150px;
    }
}
/*# sourceMappingURL=data:application/json;base64, */