.ie {
    /* display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column; */
    background-color: rgb(255, 230, 0);
    color: rgb(4, 41, 190);
    min-height: 100vh;
    position: relative;
    line-height: 1.4;
    padding-bottom: 50px;
}

.ie.resume .text.resume {
    display: initial;
}

.ie.resume .game {
    display: none;
}

.ie:not(.resume) .text.resume {
    display: none;
}

.ie h1 {
    margin-bottom: 0px;
    font-size: 2.5em;
}

.ie p {
    margin-top: 0.1em;
    font-size: 1.05em;
    text-align: justify;
}

.ie .header {
    padding: 1.5em 3.5em 1.5em;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
}

.ie .header .logo-pla {
    position: absolute;
    width: 165px;
    height: 55px;
    top: 1.5em;
    left: 2em;
}

.ie .header .logo-vh {
    position: absolute;
    width: 210px;
    height: 65px;
    top: 1.5em;
    right: 2em;
}

.ie .main {
    font-size: 1em;
    padding-top: 10%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
}

.ie .main .text {
    width: 700px;
    padding-left: 200px;
}

@media screen and (max-width: 1000px) {
    .ie .main .text {
        width: 500px;
        padding-left: 0;
    }
}

@media screen and (max-height: 700px) {
    .ie .main {
        padding-top: 5%;
    }
}

.ie .main .text h1 {
    position: relative;
}

@media screen and (max-width: 1000px) {
    .ie .main .text h1 {
        text-align: center;
    }
}

.ie .main .text h1 .piece {
    position: absolute;
    z-index: 10;
    width: 200px;
    height: 150px;
    left: -230px;
    top: -20px;
}

@media screen and (max-width: 1000px) {
    .ie .main .text h1 .piece {
        left: 150px;
        top: 220px;
    }
}

.ie .main .text p.enter-btn {
    margin: 2em 0px;
    text-align: center;
}

.ie .main .text p.enter-btn .button {
    color: rgb(4, 41, 190);
    background: rgba(255, 255, 255, 0);
    font-weight: bold;
}

.ie .main .text .link {
    text-align: left;
}

@media screen and (max-width: 1000px) {
    .ie .main .text .link {
        text-align: center;
    }
}

#useruri {
    text-align: center;
}

@media screen and (max-width: 1000px) {
    .ie .main .piece {
        top: calc(100% - 250px);
        left: calc(50vw - 100px);
    }

    .ie .footer {
        height: 300px;
    }
}

* {
    -webkit-box-sizing: border-box;
            box-sizing: border-box;
    font-family: 'Raleway', sans-serif;
}

:root {
    --cover-bg-color: #ffe600;
    --vh-dark-blue: #0429be;
    --vh-blue: #264EFA;
}

html, body {
    margin: 0;
    padding: 0px;
    min-height: 100%;
    -webkit-box-sizing: border-box;
            box-sizing: border-box;
    font-size: 18px;
    line-height: 1.7;
}

ul {
    padding: 0px;
    list-style: none;
}

.centered {
    text-align: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
}

.text {
    width: 500px;
    margin: 3em auto auto;
}

button.button {
    background: rgba(0, 0, 0, 0);
    border: 1px solid;
    border-radius: 5px;
    width: 300px;
    font-size: 1.2em;
    color: white;
    padding: .8em;
    cursor: pointer;
    -webkit-transition: background 300ms;
    transition: background 300ms;
}

button.button.black {
    background: #00000000;
    color: black;
}

button.button:hover {
    background: rgba(255, 255, 255, 0.4);
}

button.button.black:hover {
    background: rgba(0, 0, 0, 0.2);
}

@media only screen and (max-width: 700px) and (orientation: portrait) {
    .text {
        width: 300px;
    }

    button.button {
        width: 150px;
    }
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2Nzcy9pZS5jc3MiLCIuLi8uLi9jc3MvaWUuY3NzIiwiaWUuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0k7Ozs7OztxQ0FDYztJQUNkLGtDQUFpQjtJQUNqQixzQkFBQTtJQUNKLGlCQUFBO0lBQ0ksa0JBQWtCO0lBQ3RCLGdCQUFBO0lBQ0Esb0JBQUE7QUFNQTs7QUFFQTtJQ0NJLGtCQUFrQjtJREp0QixnQkFBQTtBQU1BOztBQUVBO0lBSkksaUJBQWlCO0lBQ3JCLGlCQUFBO0lBQ0EsbUJBQUE7QUFNQTs7QUFFQTtJQUpJLDBCQUFBO0lBQ0Esb0JBQUE7SUFDSixvQkFBQTtJQUNBLGFBQUE7SUFNSSx5QkFMQTtRQU1JLHNCQUxSO1lBQ0EsOEJBQUE7QUFNQTs7QUFFQTtJQUpBLGtCQUFBO0lBQ0EsWUFBQTtJQU1JLFlBQVk7SUFKaEIsVUFBQTtJQUNJLFNBQUE7QUFNSjs7QUFFQTtJQUpBLGtCQUFBO0lBQ0EsWUFBQTtJQUNBLFlBQUE7SUFNSSxVQUFVO0lBSmQsVUFBQTtBQU1BOztBQUhBO0lBTUksY0FBQTtJQUpKLGdCQUFBO0lDTUksb0JBQWE7SUFBYixvQkFBYTtJQUFiLGFBQWE7SURDakIsNEJBQUE7SUFBQSw2QkFBQTtRQUFBLDBCQUFBO1lBQUEsc0JBQUE7SUFKQSx3QkFBQTtRQUFBLHFCQUFBO1lBQUEsdUJBQUE7SUFDQSx5QkFBQTtRQUFBLHNCQUFBO1lBQUEsbUJBQUE7QUFNQTs7QUFFQTtJQUpJLFlBQUE7SUFDQSxtQkFBQTtBQ01KOztBQUVBO0lESkE7UUFNSSxZQUFBO1FBSkosZUFBQTtJQ01BO0FDVUE7O0FBRUE7SUZSSTtRQUNKLGVBQUE7SUNDSTtBQ1VKOztBQUVBO0lBQ0Esa0JBQUE7QUFDQTs7QUFFQTtJQUNBO1FBQ1Esa0JBQWtCO0lBQzFCO0FBQ0E7O0FBRUE7SUFDQSxrQkFBQTtJRFJJLFdBQUE7SUNVQSxZRlRKO0lFVUksYUZkSjtJQ01BLFlBQUE7SUNVSSxVQUFVO0FBQ2Q7O0FBRUE7SUFDQTtRQUNRLFdBQVc7UUFDbkIsVUFBQTtJRlJBO0FFVUE7O0FBRUE7SUFDSSxlQUFlO0lBQ25CLGtCQUFBO0FBQ0E7O0FBRUE7SUFDQSxzQkFBQTtJQUNJLGtDQUFrQztJQUN0QyxpQkFBQTtBQUNBOztBQUVBO0lBQ0ksZ0JBQUE7QUFDSjs7QUFFQTtJRFJBO1FDVVEsa0JBQWtCO0lEUjFCO0FDVUE7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSTtRQUNJLHVCQUF1QjtRRFIvQix3QkFBQTtJQ1VJOztJRFBKO1FDVVEsYUFBYTtJRFJyQjtBQ1VBOztBQUVBO0lBQ0ksOEJBQThCO1lBQ2xDLHNCQUFBO0lGYkEsa0NBQUE7QUVlQTs7QUFFQTtJRmJBLHlCQUFBO0lDTUEsdUJBQUE7SUNVSSxrQkFBYTtBQUNqQjs7QUFFQTtJRlJBLFNBQUE7SUVVSSxZQUFZO0lGUmhCLGdCQUFBO0lBQ0ksOEJBQXFCO1lBQ3pCLHNCQUFBO0lFVUEsZUFBQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLFlBQVk7SUFDaEIsZ0JBQUE7QUFDQTs7QUFFQTtJQUNBLGtCQUFBO0lBQ0kseUJBQUE7UURSQSxzQkFBQTtZQUNKLG1CQUFBO0lDVUksd0JBQXdCO1FBQ3hCLHFCQUFBO1lBQ0ksdUJBQVk7QUFDcEI7O0FBRUE7SUFDSSxZQUFZO0lBQ1oscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0ksNEJBQTRCO0lBQzVCLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1osYUFBYTtJQUNiLGVBQWU7SUFDZixvQ0FBb0M7SUFDcEMsNEJBQTRCO0FBQ2hDOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxvQ0FBb0M7QUFDeEM7O0FBRUE7SUFDSSw4QkFBOEI7QUFDbEM7O0FBRUE7SUFDSTtRQUNJLFlBQVk7SUFDaEI7O0lBRUE7UUFDSSxZQUFZO0lBQ2hCO0FBQ0oiLCJmaWxlIjoiaWUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmllIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZlNjAwO1xuICAgIGNvbG9yOiAjMDQyOWJlO1xuICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmllIC5oZWFkZXIge1xuICAgIHBhZGRpbmc6IDEuNWVtIDMuNWVtIDEuNWVtO1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcbiAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLmllIC5oZWFkZXIgLmxvZ28tcGxhIHtcbiAgICB3aWR0aDogMTY1cHg7XG4gICAgaGVpZ2h0OiA2NXB4O1xufVxuXG4uaWUgLmhlYWRlciAubG9nby12aCB7XG4gICAgd2lkdGg6IDIxMHB4O1xuICAgIGhlaWdodDogNjVweDtcbn1cblxuLmllIC5tYWluLnRleHQge1xuICAgIHBhZGRpbmctdG9wOiAyZW07XG59XG5cbi5pZSAubWFpbi50ZXh0IHAuZW50ZXItYnRuIHtcbiAgICBtYXJnaW46IDJlbSAwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uaWUgLm1haW4udGV4dCBwLmVudGVyLWJ0biAuYnV0dG9uIHtcbiAgICBjb2xvcjogIzA0MjliZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmMDA7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5pZSAubWFpbi50ZXh0IC5waWVjZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHotaW5kZXg6IDEwO1xuICAgIHdpZHRoOiAyMDBweDtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgbGVmdDogY2FsYyhjYWxjKDEwMHZ3IC0gNTAwcHgpIC8gMiAtIDIxMHB4KTtcbiAgICB0b3A6IGNhbGMoMTEwcHggKyA1ZW0pO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDAwcHgpIHtcbiAgICAuaWUgLm1haW4udGV4dCAucGllY2Uge1xuICAgICAgICB0b3A6IGNhbGMoMTAwJSAtIDI1MHB4KTtcbiAgICAgICAgbGVmdDogY2FsYyg1MHZ3IC0gMTAwcHgpO1xuICAgIH1cblxuICAgIC5pZSAuZm9vdGVyIHtcbiAgICAgICAgaGVpZ2h0OiAzMDBweDtcbiAgICB9XG59XG5cblxuQGltcG9ydCB1cmwoJy9zdGF0aWMvY3NzL0dhbWUuY3NzJyk7XG5AaW1wb3J0IHVybCgnL3N0YXRpYy9jc3MvQ292ZXIuY3NzJyk7XG5cbioge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgZm9udC1mYW1pbHk6ICdSYWxld2F5Jywgc2Fucy1zZXJpZjtcbn1cblxuOnJvb3Qge1xuICAgIC0tY292ZXItYmctY29sb3I6ICNmZmU2MDA7XG4gICAgLS12aC1kYXJrLWJsdWU6ICMwNDI5YmU7XG4gICAgLS12aC1ibHVlOiAjMjY0RUZBO1xufVxuXG5odG1sLCBib2R5IHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMHB4O1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBsaW5lLWhlaWdodDogMS43O1xufVxuXG51bCB7XG4gICAgcGFkZGluZzogMHB4O1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbi5jZW50ZXJlZCB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi50ZXh0IHtcbiAgICB3aWR0aDogNTAwcHg7XG4gICAgbWFyZ2luOiAzZW0gYXV0byBhdXRvO1xufVxuXG5idXR0b24uYnV0dG9uIHtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmMDA7XG4gICAgYm9yZGVyOiAxcHggc29saWQ7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIHdpZHRoOiAzMDBweDtcbiAgICBmb250LXNpemU6IDEuMmVtO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBwYWRkaW5nOiAuOGVtO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDMwMG1zO1xufVxuXG5idXR0b24uYnV0dG9uLmJsYWNrIHtcbiAgICBiYWNrZ3JvdW5kOiAjMDAwMDAwMDA7XG4gICAgY29sb3I6IGJsYWNrO1xufVxuXG5idXR0b24uYnV0dG9uOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmNTU7XG59XG5cbmJ1dHRvbi5idXR0b24uYmxhY2s6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6ICMwMDAwMDAzMztcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3MDBweCkgYW5kIChvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcbiAgICAudGV4dCB7XG4gICAgICAgIHdpZHRoOiAzMDBweDtcbiAgICB9XG5cbiAgICBidXR0b24uYnV0dG9uIHtcbiAgICAgICAgd2lkdGg6IDE1MHB4O1xuICAgIH1cbn1cbiIsIi5pZSB7XG4gICAgLyogZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47ICovXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZTYwMDtcbiAgICBjb2xvcjogIzA0MjliZTtcbiAgICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbGluZS1oZWlnaHQ6IDEuNDtcbiAgICBwYWRkaW5nLWJvdHRvbTogNTBweDtcbn1cblxuLmllIGgxIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwcHg7XG4gICAgZm9udC1zaXplOiAyLjVlbTtcbn1cblxuLmllIHAge1xuICAgIG1hcmdpbi10b3A6IDAuMWVtO1xuICAgIGZvbnQtc2l6ZTogMS4wNWVtO1xuICAgIHRleHQtYWxpZ246IGp1c3RpZnk7XG59XG5cbi5pZSAuaGVhZGVyIHtcbiAgICBwYWRkaW5nOiAxLjVlbSAzLjVlbSAxLjVlbTtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gICAgICAgIC1tcy1mbGV4LXBhY2s6IGp1c3RpZnk7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5pZSAuaGVhZGVyIC5sb2dvLXBsYSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAxNjVweDtcbiAgICBoZWlnaHQ6IDU1cHg7XG4gICAgdG9wOiAxLjVlbTtcbiAgICBsZWZ0OiAyZW07XG59XG5cbi5pZSAuaGVhZGVyIC5sb2dvLXZoIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDIxMHB4O1xuICAgIGhlaWdodDogNjVweDtcbiAgICB0b3A6IDEuNWVtO1xuICAgIHJpZ2h0OiAyZW07XG59XG5cbi5pZSAubWFpbiB7XG4gICAgZm9udC1zaXplOiAxZW07XG4gICAgcGFkZGluZy10b3A6IDEwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmllIC5tYWluIC50ZXh0IHAuZW50ZXItYnRuIHtcbiAgICBtYXJnaW46IDJlbSAwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uaWUgLm1haW4gLnRleHQgcC5lbnRlci1idG4gLmJ1dHRvbiB7XG4gICAgY29sb3I6ICMwNDI5YmU7XG4gICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwKTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmllIC5tYWluIC5waWVjZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHotaW5kZXg6IDEwO1xuICAgIHdpZHRoOiAyMDBweDtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgbGVmdDogY2FsYyhjYWxjKDEwMHZ3IC0gNTAwcHgpIC8gMiAtIDIxMHB4KTtcbiAgICB0b3A6IGNhbGMoMTAlICsgMTY1cHgpO1xufVxuXG4jdXNlcnVyaSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDAwcHgpIHtcbiAgICAuaWUgLm1haW4gLnBpZWNlIHtcbiAgICAgICAgdG9wOiBjYWxjKDEwMCUgLSAyNTBweCk7XG4gICAgICAgIGxlZnQ6IGNhbGMoNTB2dyAtIDEwMHB4KTtcbiAgICB9XG5cbiAgICAuaWUgLmZvb3RlciB7XG4gICAgICAgIGhlaWdodDogMzAwcHg7XG4gICAgfVxufVxuXG4qIHtcbiAgICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIGZvbnQtZmFtaWx5OiAnUmFsZXdheScsIHNhbnMtc2VyaWY7XG59XG5cbjpyb290IHtcbiAgICAtLWNvdmVyLWJnLWNvbG9yOiAjZmZlNjAwO1xuICAgIC0tdmgtZGFyay1ibHVlOiAjMDQyOWJlO1xuICAgIC0tdmgtYmx1ZTogIzI2NEVGQTtcbn1cblxuaHRtbCwgYm9keSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDBweDtcbiAgICBtaW4taGVpZ2h0OiAxMDAlO1xuICAgIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjc7XG59XG5cbnVsIHtcbiAgICBwYWRkaW5nOiAwcHg7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuLmNlbnRlcmVkIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgLXdlYmtpdC1ib3gtcGFjazogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLnRleHQge1xuICAgIHdpZHRoOiA1MDBweDtcbiAgICBtYXJnaW46IDNlbSBhdXRvIGF1dG87XG59XG5cbmJ1dHRvbi5idXR0b24ge1xuICAgIGJhY2tncm91bmQ6ICNmZmZmZmYwMDtcbiAgICBib3JkZXI6IDFweCBzb2xpZDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgd2lkdGg6IDMwMHB4O1xuICAgIGZvbnQtc2l6ZTogMS4yZW07XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHBhZGRpbmc6IC44ZW07XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogYmFja2dyb3VuZCAzMDBtcztcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDMwMG1zO1xufVxuXG5idXR0b24uYnV0dG9uLmJsYWNrIHtcbiAgICBiYWNrZ3JvdW5kOiAjMDAwMDAwMDA7XG4gICAgY29sb3I6IGJsYWNrO1xufVxuXG5idXR0b24uYnV0dG9uOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmNTU7XG59XG5cbmJ1dHRvbi5idXR0b24uYmxhY2s6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6ICMwMDAwMDAzMztcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3MDBweCkgYW5kIChvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcbiAgICAudGV4dCB7XG4gICAgICAgIHdpZHRoOiAzMDBweDtcbiAgICB9XG5cbiAgICBidXR0b24uYnV0dG9uIHtcbiAgICAgICAgd2lkdGg6IDE1MHB4O1xuICAgIH1cbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTR1THk0dUwyTnpjeTlwWlM1amMzTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRVUU3U1VGRFNUczdPenM3TzNGRFFVTmpPMGxCUTJRc2VVSkJRV2xDTzBsQlEycENMR05CUVVFN1NVRkRTaXhwUWtGQlFUdEpRVU5KTEd0Q1FVRnJRanRKUVVOMFFpeG5Ra0ZCUVR0SlFVTkJMRzlDUVVGQk8wRkJUVUU3TzBGQlJVRTdPMGxCU0VFc2EwSkJRVUU3UVVGTlFUczdRVUZGUVR0SlFVcEpMR2xDUVVGcFFqdEpRVU55UWl4cFFrRkJRVHRKUVVOQkxHMUNRVUZCTzBGQlRVRTdPMEZCUlVFN1NVRktTU3d3UWtGQlFUdEpRVU5CTEc5Q1FVRkJPMGxCUTBvc2IwSkJRVUU3U1VGRFFTeGhRVUZCTzBsQlRVa3NlVUpCVEVFN1VVRk5TU3h6UWtGTVVqdFpRVU5CTERoQ1FVRkJPMEZCVFVFN08wRkJSVUU3U1VGS1FTeHJRa0ZCUVR0SlFVTkJMRmxCUVVFN1NVRk5TU3haUVVGWk8wbEJTbWhDTEZWQlFVRTdTVUZEU1N4VFFVRkJPMEZCVFVvN08wRkJSVUU3U1VGS1FTeHJRa0ZCUVR0SlFVTkJMRmxCUVVFN1NVRkRRU3haUVVGQk8wbEJUVWtzVlVGQlZUdEpRVXBrTEZWQlFVRTdRVUZOUVRzN1FVRklRVHRKUVUxSkxHZENRVUZuUWp0QlFVcHdRanM3UVVGUFFUdEpRVXBCTEdWQlFVRTdTVUZEUVN4clFrRkJRVHRCUVUxQk96dEJRVVZCTzBsQlNra3NZMEZCUVR0SlFVTkJMR3REUVVGQk8wbEJRMG9zYVVKQlFVRTdRVUZOUVRzN1FVRklRVHRKUVUxSkxHRkJRV0U3U1VGS2FrSXNhMEpCUVVFN1NVRkRRU3hYUVVGQk8wbEJUVWtzV1VGTVNUdEpRVTFLTEZsQlRFRTdTVUZEUVN4VFFVRkJPMGxCVFVFc1ZVRkJWVHRCUVVOa096dEJRVVZCTzBsQlNrRXNhMEpCUVVFN1FVRk5RVHM3UVVGRlFUdEpRVU5KTzFGQlEwRXNkVUpCUVVFN1VVRktTaXgzUWtGQlFUdEpRVTFKT3p0SlFVaEtPMUZCUTBFc1lVRkJRVHRKUVUxSk8wRkJTa283TzBGQlQwRTdTVUZLUVN3NFFrRkJRVHRaUVVOQkxITkNRVUZCTzBsQlRVa3NhME5CUVZrN1FVRkRhRUk3TzBGQlJVRTdTVUZPU1N4NVFrRkJRVHRKUVZGS0xIVkNRVUZCTzBsQlEwa3NhMEpCUVd0Q08wRkJRM1JDT3p0QlFVVkJPMGxCUTBFc1UwRkJRVHRKUVVOSkxGbEJRVms3U1VGRGFFSXNaMEpCUVVFN1NVRktRU3c0UWtGQlFUdFpRVU5CTEhOQ1FVRkJPMGxCVFVrc1pVRkJTVHRKUVVOS0xHZENRVXhLTzBGQlRVRTdPMEZCUlVFN1NVRkRRU3haUVVGQk8wbEJRMGtzWjBKQlFXZENPMEZCUTNCQ096dEJRVVZCTzBsQlEwRXNhMEpCUVVFN1NVRkRTU3g1UWtGQmVVSTdVVUZETjBJc2MwSkJRVUU3V1VGWVFTeHRRa0ZCUVR0SlFWRkJMSGRDUVVGQk8xRkJUVWtzY1VKQlFXdENPMWxCU25SQ0xIVkNRVUZCTzBGQlRVRTdPMEZCUlVFN1NVRllRU3haUVVGQk8wbEJRMGtzY1VKQlFVRTdRVUZoU2pzN1FVRkZRVHRKUVVOQkxIRkNRVUZCTzBsQldFRXNhVUpCUVVFN1NVRlJRU3hyUWtGQlFUdEpRVTFCTEZsQlFVRTdTVUZEU1N4blFrRkJaMEk3U1VGRGNFSXNXVUZCUVR0SlFVcEJMR0ZCUVVFN1NVRkRRU3hsUVVGQk8wbEJUVWtzYjBOQlFXOURPMGxCU25oRExEUkNRVUZCTzBGQlRVRTdPMEZCUlVFN1NVRktRU3h4UWtGQlFUdEpRVU5CTEZsQlFVRTdRVUZOUVRzN1FVRkZRVHRKUVVwSkxIRkNRVUZCTzBGQlRVbzdPMEZCUlVFN1NVRkRTU3h4UWtGQmNVSTdRVUZEZWtJN08wRkJSVUU3U1VGRFNUdFJRVU5KTEZsQlFWazdTVUZEYUVJN08wbEJSVUU3VVVGRFNTeFpRVUZaTzBsQlEyaENPMEZCUTBvaUxDSm1hV3hsSWpvaWFXVXVZM056SWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaUxtbGxJSHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpabVpsTmpBd08xeHVJQ0FnSUdOdmJHOXlPaUFqTURReU9XSmxPMXh1SUNBZ0lHMXBiaTFvWldsbmFIUTZJREV3TUhab08xeHVJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JuMWNibHh1TG1sbElDNW9aV0ZrWlhJZ2UxeHVJQ0FnSUhCaFpHUnBibWM2SURFdU5XVnRJRE11TldWdElERXVOV1Z0TzF4dUlDQWdJR1JwYzNCc1lYazZJQzEzWldKcmFYUXRZbTk0TzF4dUlDQWdJR1JwYzNCc1lYazZJQzF0Y3kxbWJHVjRZbTk0TzF4dUlDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJQ0FnTFhkbFltdHBkQzFpYjNndGNHRmphem9nYW5WemRHbG1lVHRjYmlBZ0lDQXRiWE10Wm14bGVDMXdZV05yT2lCcWRYTjBhV1o1TzF4dUlDQWdJR3AxYzNScFpua3RZMjl1ZEdWdWREb2djM0JoWTJVdFltVjBkMlZsYmp0Y2JuMWNibHh1TG1sbElDNW9aV0ZrWlhJZ0xteHZaMjh0Y0d4aElIdGNiaUFnSUNCM2FXUjBhRG9nTVRZMWNIZzdYRzRnSUNBZ2FHVnBaMmgwT2lBMk5YQjRPMXh1ZlZ4dVhHNHVhV1VnTG1obFlXUmxjaUF1Ykc5bmJ5MTJhQ0I3WEc0Z0lDQWdkMmxrZEdnNklESXhNSEI0TzF4dUlDQWdJR2hsYVdkb2REb2dOalZ3ZUR0Y2JuMWNibHh1TG1sbElDNXRZV2x1TG5SbGVIUWdlMXh1SUNBZ0lIQmhaR1JwYm1jdGRHOXdPaUF5WlcwN1hHNTlYRzVjYmk1cFpTQXViV0ZwYmk1MFpYaDBJSEF1Wlc1MFpYSXRZblJ1SUh0Y2JpQWdJQ0J0WVhKbmFXNDZJREpsYlNBd2NIZzdYRzRnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHVmVnh1WEc0dWFXVWdMbTFoYVc0dWRHVjRkQ0J3TG1WdWRHVnlMV0owYmlBdVluVjBkRzl1SUh0Y2JpQWdJQ0JqYjJ4dmNqb2dJekEwTWpsaVpUdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBalptWm1abVptTURBN1hHNGdJQ0FnWm05dWRDMTNaV2xuYUhRNklHSnZiR1E3WEc1OVhHNWNiaTVwWlNBdWJXRnBiaTUwWlhoMElDNXdhV1ZqWlNCN1hHNGdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQWdJSG90YVc1a1pYZzZJREV3TzF4dUlDQWdJSGRwWkhSb09pQXlNREJ3ZUR0Y2JpQWdJQ0JvWldsbmFIUTZJR0YxZEc4N1hHNGdJQ0FnYkdWbWREb2dZMkZzWXloallXeGpLREV3TUhaM0lDMGdOVEF3Y0hncElDOGdNaUF0SURJeE1IQjRLVHRjYmlBZ0lDQjBiM0E2SUdOaGJHTW9NVEV3Y0hnZ0t5QTFaVzBwTzF4dWZWeHVYRzVBYldWa2FXRWdjMk55WldWdUlHRnVaQ0FvYldGNExYZHBaSFJvT2lBeE1EQXdjSGdwSUh0Y2JpQWdJQ0F1YVdVZ0xtMWhhVzR1ZEdWNGRDQXVjR2xsWTJVZ2UxeHVJQ0FnSUNBZ0lDQjBiM0E2SUdOaGJHTW9NVEF3SlNBdElESTFNSEI0S1R0Y2JpQWdJQ0FnSUNBZ2JHVm1kRG9nWTJGc1l5ZzFNSFozSUMwZ01UQXdjSGdwTzF4dUlDQWdJSDFjYmx4dUlDQWdJQzVwWlNBdVptOXZkR1Z5SUh0Y2JpQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBek1EQndlRHRjYmlBZ0lDQjlYRzU5WEc1Y2JseHVRR2x0Y0c5eWRDQjFjbXdvSnk5emRHRjBhV012WTNOekwwZGhiV1V1WTNOekp5azdYRzVBYVcxd2IzSjBJSFZ5YkNnbkwzTjBZWFJwWXk5amMzTXZRMjkyWlhJdVkzTnpKeWs3WEc1Y2Jpb2dlMXh1SUNBZ0lHSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2c3WEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUNkU1lXeGxkMkY1Snl3Z2MyRnVjeTF6WlhKcFpqdGNibjFjYmx4dU9uSnZiM1FnZTF4dUlDQWdJQzB0WTI5MlpYSXRZbWN0WTI5c2IzSTZJQ05tWm1VMk1EQTdYRzRnSUNBZ0xTMTJhQzFrWVhKckxXSnNkV1U2SUNNd05ESTVZbVU3WEc0Z0lDQWdMUzEyYUMxaWJIVmxPaUFqTWpZMFJVWkJPMXh1ZlZ4dVhHNW9kRzFzTENCaWIyUjVJSHRjYmlBZ0lDQnRZWEpuYVc0NklEQTdYRzRnSUNBZ2NHRmtaR2x1WnpvZ01IQjRPMXh1SUNBZ0lHaGxhV2RvZERvZ01UQXdKVHRjYmlBZ0lDQmliM2d0YzJsNmFXNW5PaUJpYjNKa1pYSXRZbTk0TzF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTVRod2VEdGNiaUFnSUNCc2FXNWxMV2hsYVdkb2REb2dNUzQzTzF4dWZWeHVYRzUxYkNCN1hHNGdJQ0FnY0dGa1pHbHVaem9nTUhCNE8xeHVJQ0FnSUd4cGMzUXRjM1I1YkdVNklHNXZibVU3WEc1OVhHNWNiaTVqWlc1MFpYSmxaQ0I3WEc0Z0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh1SUNBZ0lHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYRzRnSUNBZ2FuVnpkR2xtZVMxamIyNTBaVzUwT2lCalpXNTBaWEk3WEc1OVhHNWNiaTUwWlhoMElIdGNiaUFnSUNCM2FXUjBhRG9nTlRBd2NIZzdYRzRnSUNBZ2JXRnlaMmx1T2lBelpXMGdZWFYwYnlCaGRYUnZPMXh1ZlZ4dVhHNWlkWFIwYjI0dVluVjBkRzl1SUh0Y2JpQWdJQ0JpWVdOclozSnZkVzVrT2lBalptWm1abVptTURBN1hHNGdJQ0FnWW05eVpHVnlPaUF4Y0hnZ2MyOXNhV1E3WEc0Z0lDQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ05YQjRPMXh1SUNBZ0lIZHBaSFJvT2lBek1EQndlRHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJREV1TW1WdE8xeHVJQ0FnSUdOdmJHOXlPaUIzYUdsMFpUdGNiaUFnSUNCd1lXUmthVzVuT2lBdU9HVnRPMXh1SUNBZ0lHTjFjbk52Y2pvZ2NHOXBiblJsY2p0Y2JpQWdJQ0IwY21GdWMybDBhVzl1T2lCaVlXTnJaM0p2ZFc1a0lETXdNRzF6TzF4dWZWeHVYRzVpZFhSMGIyNHVZblYwZEc5dUxtSnNZV05ySUh0Y2JpQWdJQ0JpWVdOclozSnZkVzVrT2lBak1EQXdNREF3TURBN1hHNGdJQ0FnWTI5c2IzSTZJR0pzWVdOck8xeHVmVnh1WEc1aWRYUjBiMjR1WW5WMGRHOXVPbWh2ZG1WeUlIdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQWpabVptWm1abU5UVTdYRzU5WEc1Y2JtSjFkSFJ2Ymk1aWRYUjBiMjR1WW14aFkyczZhRzkyWlhJZ2UxeHVJQ0FnSUdKaFkydG5jbTkxYm1RNklDTXdNREF3TURBek16dGNibjFjYmx4dVFHMWxaR2xoSUc5dWJIa2djMk55WldWdUlHRnVaQ0FvYldGNExYZHBaSFJvT2lBM01EQndlQ2tnWVc1a0lDaHZjbWxsYm5SaGRHbHZiam9nY0c5eWRISmhhWFFwSUh0Y2JpQWdJQ0F1ZEdWNGRDQjdYRzRnSUNBZ0lDQWdJSGRwWkhSb09pQXpNREJ3ZUR0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JpZFhSMGIyNHVZblYwZEc5dUlIdGNiaUFnSUNBZ0lDQWdkMmxrZEdnNklERTFNSEI0TzF4dUlDQWdJSDFjYm4xY2JpSmRmUT09ICovIiwiLmllIHtcbiAgICAvKiBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gICAgLXdlYmtpdC1ib3gtZGlyZWN0aW9uOiBub3JtYWw7XG4gICAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgKi9cbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCAyMzAsIDApO1xuICAgIGNvbG9yOiByZ2IoNCwgNDEsIDE5MCk7XG4gICAgbWluLWhlaWdodDogMTAwdmg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gICAgcGFkZGluZy1ib3R0b206IDUwcHg7XG59XG5cbi5pZSBoMSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMHB4O1xuICAgIGZvbnQtc2l6ZTogMi41ZW07XG59XG5cbi5pZSBwIHtcbiAgICBtYXJnaW4tdG9wOiAwLjFlbTtcbiAgICBmb250LXNpemU6IDEuMDVlbTtcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xufVxuXG4uaWUgLmhlYWRlciB7XG4gICAgcGFkZGluZzogMS41ZW0gMy41ZW0gMS41ZW07XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG4uaWUgLmhlYWRlciAubG9nby1wbGEge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogMTY1cHg7XG4gICAgaGVpZ2h0OiA1NXB4O1xuICAgIHRvcDogMS41ZW07XG4gICAgbGVmdDogMmVtO1xufVxuXG4uaWUgLmhlYWRlciAubG9nby12aCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAyMTBweDtcbiAgICBoZWlnaHQ6IDY1cHg7XG4gICAgdG9wOiAxLjVlbTtcbiAgICByaWdodDogMmVtO1xufVxuXG4uaWUgLm1haW4ge1xuICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgIHBhZGRpbmctdG9wOiAxMCU7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgICAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgLXdlYmtpdC1ib3gtcGFjazogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmllIC5tYWluIC50ZXh0IHAuZW50ZXItYnRuIHtcbiAgICBtYXJnaW46IDJlbSAwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uaWUgLm1haW4gLnRleHQgcC5lbnRlci1idG4gLmJ1dHRvbiB7XG4gICAgY29sb3I6IHJnYig0LCA0MSwgMTkwKTtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDApO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4uaWUgLm1haW4gLnBpZWNlIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB6LWluZGV4OiAxMDtcbiAgICB3aWR0aDogMjAwcHg7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIGxlZnQ6IGNhbGMoY2FsYygxMDB2dyAtIDUwMHB4KSAvIDIgLSAyMTBweCk7XG4gICAgdG9wOiBjYWxjKDEwJSArIDE2NXB4KTtcbn1cblxuLmllIC5tYWluIC50ZXh0IC5saW5rIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbiN1c2VydXJpIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMDBweCkge1xuICAgIC5pZSAubWFpbiAucGllY2Uge1xuICAgICAgICB0b3A6IGNhbGMoMTAwJSAtIDI1MHB4KTtcbiAgICAgICAgbGVmdDogY2FsYyg1MHZ3IC0gMTAwcHgpO1xuICAgIH1cblxuICAgIC5pZSAuZm9vdGVyIHtcbiAgICAgICAgaGVpZ2h0OiAzMDBweDtcbiAgICB9XG59XG5cbioge1xuICAgIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgZm9udC1mYW1pbHk6ICdSYWxld2F5Jywgc2Fucy1zZXJpZjtcbn1cblxuOnJvb3Qge1xuICAgIC0tY292ZXItYmctY29sb3I6ICNmZmU2MDA7XG4gICAgLS12aC1kYXJrLWJsdWU6ICMwNDI5YmU7XG4gICAgLS12aC1ibHVlOiAjMjY0RUZBO1xufVxuXG5odG1sLCBib2R5IHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMHB4O1xuICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDEuNztcbn1cblxudWwge1xuICAgIHBhZGRpbmc6IDBweDtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG4uY2VudGVyZWQge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAgICAgICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBjZW50ZXI7XG4gICAgICAgIC1tcy1mbGV4LXBhY2s6IGNlbnRlcjtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4udGV4dCB7XG4gICAgd2lkdGg6IDUwMHB4O1xuICAgIG1hcmdpbjogM2VtIGF1dG8gYXV0bztcbn1cblxuYnV0dG9uLmJ1dHRvbiB7XG4gICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwKTtcbiAgICBib3JkZXI6IDFweCBzb2xpZDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgd2lkdGg6IDMwMHB4O1xuICAgIGZvbnQtc2l6ZTogMS4yZW07XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHBhZGRpbmc6IC44ZW07XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogYmFja2dyb3VuZCAzMDBtcztcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDMwMG1zO1xufVxuXG5idXR0b24uYnV0dG9uLmJsYWNrIHtcbiAgICBiYWNrZ3JvdW5kOiAjMDAwMDAwMDA7XG4gICAgY29sb3I6IGJsYWNrO1xufVxuXG5idXR0b24uYnV0dG9uOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7XG59XG5cbmJ1dHRvbi5idXR0b24uYmxhY2s6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4yKTtcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3MDBweCkgYW5kIChvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcbiAgICAudGV4dCB7XG4gICAgICAgIHdpZHRoOiAzMDBweDtcbiAgICB9XG5cbiAgICBidXR0b24uYnV0dG9uIHtcbiAgICAgICAgd2lkdGg6IDE1MHB4O1xuICAgIH1cbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJaTR1THk0dUx5NHVMMk56Y3k5cFpTNWpjM01pTENJdUxpOHVMaTlqYzNNdmFXVXVZM056SWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQk8wbEJRMGs3T3pzN096dHhRMEZEWXp0SlFVTmtMSGxDUVVGcFFqdEpRVU5xUWl4alFVRkJPMGxCUTBvc2FVSkJRVUU3U1VGRFNTeHJRa0ZCYTBJN1NVRkRkRUlzWjBKQlFVRTdTVUZEUVN4dlFrRkJRVHRCUVUxQk96dEJRVVZCTzBsRFEwa3NhMEpCUVd0Q08wbEVTblJDTEdkQ1FVRkJPMEZCVFVFN08wRkJSVUU3U1VGS1NTeHBRa0ZCYVVJN1NVRkRja0lzYVVKQlFVRTdTVUZEUVN4dFFrRkJRVHRCUVUxQk96dEJRVVZCTzBsQlNra3NNRUpCUVVFN1NVRkRRU3h2UWtGQlFUdEpRVU5LTEc5Q1FVRkJPMGxCUTBFc1lVRkJRVHRKUVUxSkxIbENRVXhCTzFGQlRVa3NjMEpCVEZJN1dVRkRRU3c0UWtGQlFUdEJRVTFCT3p0QlFVVkJPMGxCU2tFc2EwSkJRVUU3U1VGRFFTeFpRVUZCTzBsQlRVa3NXVUZCV1R0SlFVcG9RaXhWUVVGQk8wbEJRMGtzVTBGQlFUdEJRVTFLT3p0QlFVVkJPMGxCU2tFc2EwSkJRVUU3U1VGRFFTeFpRVUZCTzBsQlEwRXNXVUZCUVR0SlFVMUpMRlZCUVZVN1NVRktaQ3hWUVVGQk8wRkJUVUU3TzBGQlNFRTdTVUZOU1N4alFVRkJPMGxCU2tvc1owSkJRVUU3U1VOTlNTeHZRa0ZCWVR0SlFVRmlMRzlDUVVGaE8wbEJRV0lzWVVGQllUdEpSRU5xUWl3MFFrRkJRVHRKUVVGQkxEWkNRVUZCTzFGQlFVRXNNRUpCUVVFN1dVRkJRU3h6UWtGQlFUdEpRVXBCTEhkQ1FVRkJPMUZCUVVFc2NVSkJRVUU3V1VGQlFTeDFRa0ZCUVR0SlFVTkJMSGxDUVVGQk8xRkJRVUVzYzBKQlFVRTdXVUZCUVN4dFFrRkJRVHRCUVUxQk96dEJRVVZCTzBsQlNra3NaVUZCUVR0SlFVTkJMR3RDUVVGQk8wRkRUVW83TzBGQlJVRTdTVVJLUVN4alFVRkJPMGxCVFVrc2EwTkJRV0U3U1VGS2FrSXNhVUpCUVVFN1FVTk5RVHM3UVVGRlFUdEpSRXBKTEd0Q1FVRkJPMGxCVFVFc1YwRkJWVHRKUVVOa0xGbEJRVUU3U1VORFNTeFpRVUZaTzBsRVEyaENMREpEUVVGQk8wbEJTa0VzYzBKQlFVRTdRVUZOUVRzN1FVRkZRVHRKUVVOSkxHdENRVUZCTzBGRFEwbzdPMEZCUlVFN1NVRkRTVHRSUkVwS0xIVkNRVUZCTzFGQlEwRXNkMEpCUVVFN1NVRk5TVHM3U1VORlFUdFJSRU5LTEdGQlFVRTdTVUZLUVR0QlEwMUJPenRCUkVWQk8wbERRMGtzT0VKQlFUaENPMWxFUTJ4RExITkNRVUZCTzBsQlRra3NhME5CUVVFN1FVTlJTanM3UVVSRlFUdEpRME5KTEhsQ1FVRjVRanRKUkVNM1FpeDFRa0ZCUVR0SlFVTkJMR3RDUVVGQk8wRkRRMEU3TzBGQlJVRTdTVUZEU1N4VFJFeEtPMGxCVFVrc1dVRkJRVHRKUVVOQkxHZENRVXhLTzBsQlRVRXNPRUpCUVVFN1dVTkRXU3h6UWtGQmMwSTdTVVJEYkVNc1pVRkJRVHRKUVVOQkxHZENRVUZCTzBGRFEwRTdPMEZCUlVFN1NVUkRRU3haUVVGQk8wbEJRMEVzWjBKQlFVRTdRVU5EUVRzN1FVRkZRVHRKUkVwQkxHdENRVUZCTzBsRFRVa3NlVUpFUVd0Q08xRkRRMlFzYzBKRVRGSTdXVUZOUVN4dFFrRkJRVHRKUTBOSkxIZENRVUYzUWp0UlJFTTFRaXh4UWtGQlFUdFpRVmhCTEhWQ1FVRkJPMEZEWVVFN08wRkJSVUU3U1VSRFFTeFpRVUZCTzBsQlEwRXNjVUpCUVVFN1FVTkRRVHM3UVVGRlFUdEpSRU5KTEhGQ1FVRm5RanRKUVVOd1FpeHBRa0ZCUVR0SlFVcEJMR3RDUVVGQk8wbEJRMEVzV1VGQlFUdEpRVTFKTEdkQ1FVRkJPMGxCU2tvc1dVRkJRVHRKUVUxQkxHRkJRVUU3U1VORFNTeGxRVUZsTzBsRVEyNUNMRzlEUVVGQk8wbEJTa0VzTkVKQlFVRTdRVU5OUVRzN1FVRkZRVHRKUkVOQkxIRkNRVUZCTzBsQlNra3NXVUZCUVR0QlFVMUtPenRCUVVWQk8wbEJRMGtzY1VKQlFYRkNPMEZCUTNwQ096dEJRVVZCTzBsQlEwa3NjVUpCUVVFN1FVTkRTanM3UVVGRlFUdEpSRU5KTzFGQlEwa3NXVUZCV1R0SlFVTm9RanM3U1VORlFUdFJRVU5KTEZsQlFWazdTVUZEYUVJN1FVRkRTaUlzSW1acGJHVWlPaUpwWlM1amMzTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUl1YVdVZ2UxeHVJQ0FnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNObVptVTJNREE3WEc0Z0lDQWdZMjlzYjNJNklDTXdOREk1WW1VN1hHNGdJQ0FnYldsdUxXaGxhV2RvZERvZ01UQXdkbWc3WEc0Z0lDQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1ZlZ4dVhHNHVhV1VnTG1obFlXUmxjaUI3WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNUzQxWlcwZ015NDFaVzBnTVM0MVpXMDdYRzRnSUNBZ1pHbHpjR3hoZVRvZ0xYZGxZbXRwZEMxaWIzZzdYRzRnSUNBZ1pHbHpjR3hoZVRvZ0xXMXpMV1pzWlhoaWIzZzdYRzRnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ0lDQXRkMlZpYTJsMExXSnZlQzF3WVdOck9pQnFkWE4wYVdaNU8xeHVJQ0FnSUMxdGN5MW1iR1Y0TFhCaFkyczZJR3AxYzNScFpuazdYRzRnSUNBZ2FuVnpkR2xtZVMxamIyNTBaVzUwT2lCemNHRmpaUzFpWlhSM1pXVnVPMXh1ZlZ4dVhHNHVhV1VnTG1obFlXUmxjaUF1Ykc5bmJ5MXdiR0VnZTF4dUlDQWdJSGRwWkhSb09pQXhOalZ3ZUR0Y2JpQWdJQ0JvWldsbmFIUTZJRFkxY0hnN1hHNTlYRzVjYmk1cFpTQXVhR1ZoWkdWeUlDNXNiMmR2TFhab0lIdGNiaUFnSUNCM2FXUjBhRG9nTWpFd2NIZzdYRzRnSUNBZ2FHVnBaMmgwT2lBMk5YQjRPMXh1ZlZ4dVhHNHVhV1VnTG0xaGFXNHVkR1Y0ZENCN1hHNGdJQ0FnY0dGa1pHbHVaeTEwYjNBNklESmxiVHRjYm4xY2JseHVMbWxsSUM1dFlXbHVMblJsZUhRZ2NDNWxiblJsY2kxaWRHNGdlMXh1SUNBZ0lHMWhjbWRwYmpvZ01tVnRJREJ3ZUR0Y2JpQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEc1OVhHNWNiaTVwWlNBdWJXRnBiaTUwWlhoMElIQXVaVzUwWlhJdFluUnVJQzVpZFhSMGIyNGdlMXh1SUNBZ0lHTnZiRzl5T2lBak1EUXlPV0psTzF4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05tWm1abVptWXdNRHRjYmlBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nWW05c1pEdGNibjFjYmx4dUxtbGxJQzV0WVdsdUxuUmxlSFFnTG5CcFpXTmxJSHRjYmlBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUNBZ2VpMXBibVJsZURvZ01UQTdYRzRnSUNBZ2QybGtkR2c2SURJd01IQjRPMXh1SUNBZ0lHaGxhV2RvZERvZ1lYVjBienRjYmlBZ0lDQnNaV1owT2lCallXeGpLR05oYkdNb01UQXdkbmNnTFNBMU1EQndlQ2tnTHlBeUlDMGdNakV3Y0hncE8xeHVJQ0FnSUhSdmNEb2dZMkZzWXlneE1UQndlQ0FySURWbGJTazdYRzU5WEc1Y2JrQnRaV1JwWVNCelkzSmxaVzRnWVc1a0lDaHRZWGd0ZDJsa2RHZzZJREV3TURCd2VDa2dlMXh1SUNBZ0lDNXBaU0F1YldGcGJpNTBaWGgwSUM1d2FXVmpaU0I3WEc0Z0lDQWdJQ0FnSUhSdmNEb2dZMkZzWXlneE1EQWxJQzBnTWpVd2NIZ3BPMXh1SUNBZ0lDQWdJQ0JzWldaME9pQmpZV3hqS0RVd2RuY2dMU0F4TURCd2VDazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0xtbGxJQzVtYjI5MFpYSWdlMXh1SUNBZ0lDQWdJQ0JvWldsbmFIUTZJRE13TUhCNE8xeHVJQ0FnSUgxY2JuMWNibHh1WEc1QWFXMXdiM0owSUhWeWJDZ25MM04wWVhScFl5OWpjM012UjJGdFpTNWpjM01uS1R0Y2JrQnBiWEJ2Y25RZ2RYSnNLQ2N2YzNSaGRHbGpMMk56Y3k5RGIzWmxjaTVqYzNNbktUdGNibHh1S2lCN1hHNGdJQ0FnWW05NExYTnBlbWx1WnpvZ1ltOXlaR1Z5TFdKdmVEdGNiaUFnSUNCbWIyNTBMV1poYldsc2VUb2dKMUpoYkdWM1lYa25MQ0J6WVc1ekxYTmxjbWxtTzF4dWZWeHVYRzQ2Y205dmRDQjdYRzRnSUNBZ0xTMWpiM1psY2kxaVp5MWpiMnh2Y2pvZ0kyWm1aVFl3TUR0Y2JpQWdJQ0F0TFhab0xXUmhjbXN0WW14MVpUb2dJekEwTWpsaVpUdGNiaUFnSUNBdExYWm9MV0pzZFdVNklDTXlOalJGUmtFN1hHNTlYRzVjYm1oMGJXd3NJR0p2WkhrZ2UxeHVJQ0FnSUcxaGNtZHBiam9nTUR0Y2JpQWdJQ0J3WVdSa2FXNW5PaUF3Y0hnN1hHNGdJQ0FnYUdWcFoyaDBPaUF4TURBbE8xeHVJQ0FnSUdKdmVDMXphWHBwYm1jNklHSnZjbVJsY2kxaWIzZzdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXhPSEI0TzF4dUlDQWdJR3hwYm1VdGFHVnBaMmgwT2lBeExqYzdYRzU5WEc1Y2JuVnNJSHRjYmlBZ0lDQndZV1JrYVc1bk9pQXdjSGc3WEc0Z0lDQWdiR2x6ZEMxemRIbHNaVG9nYm05dVpUdGNibjFjYmx4dUxtTmxiblJsY21Wa0lIdGNiaUFnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNGdJQ0FnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2JpQWdJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR05sYm5SbGNqdGNibjFjYmx4dUxuUmxlSFFnZTF4dUlDQWdJSGRwWkhSb09pQTFNREJ3ZUR0Y2JpQWdJQ0J0WVhKbmFXNDZJRE5sYlNCaGRYUnZJR0YxZEc4N1hHNTlYRzVjYm1KMWRIUnZiaTVpZFhSMGIyNGdlMXh1SUNBZ0lHSmhZMnRuY205MWJtUTZJQ05tWm1abVptWXdNRHRjYmlBZ0lDQmliM0prWlhJNklERndlQ0J6YjJ4cFpEdGNiaUFnSUNCaWIzSmtaWEl0Y21Ga2FYVnpPaUExY0hnN1hHNGdJQ0FnZDJsa2RHZzZJRE13TUhCNE8xeHVJQ0FnSUdadmJuUXRjMmw2WlRvZ01TNHlaVzA3WEc0Z0lDQWdZMjlzYjNJNklIZG9hWFJsTzF4dUlDQWdJSEJoWkdScGJtYzZJQzQ0WlcwN1hHNGdJQ0FnWTNWeWMyOXlPaUJ3YjJsdWRHVnlPMXh1SUNBZ0lIUnlZVzV6YVhScGIyNDZJR0poWTJ0bmNtOTFibVFnTXpBd2JYTTdYRzU5WEc1Y2JtSjFkSFJ2Ymk1aWRYUjBiMjR1WW14aFkyc2dlMXh1SUNBZ0lHSmhZMnRuY205MWJtUTZJQ013TURBd01EQXdNRHRjYmlBZ0lDQmpiMnh2Y2pvZ1lteGhZMnM3WEc1OVhHNWNibUoxZEhSdmJpNWlkWFIwYjI0NmFHOTJaWElnZTF4dUlDQWdJR0poWTJ0bmNtOTFibVE2SUNObVptWm1abVkxTlR0Y2JuMWNibHh1WW5WMGRHOXVMbUoxZEhSdmJpNWliR0ZqYXpwb2IzWmxjaUI3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nSXpBd01EQXdNRE16TzF4dWZWeHVYRzVBYldWa2FXRWdiMjVzZVNCelkzSmxaVzRnWVc1a0lDaHRZWGd0ZDJsa2RHZzZJRGN3TUhCNEtTQmhibVFnS0c5eWFXVnVkR0YwYVc5dU9pQndiM0owY21GcGRDa2dlMXh1SUNBZ0lDNTBaWGgwSUh0Y2JpQWdJQ0FnSUNBZ2QybGtkR2c2SURNd01IQjRPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHSjFkSFJ2Ymk1aWRYUjBiMjRnZTF4dUlDQWdJQ0FnSUNCM2FXUjBhRG9nTVRVd2NIZzdYRzRnSUNBZ2ZWeHVmVnh1SWl3aUxtbGxJSHRjYmlBZ0lDQXZLaUJrYVhOd2JHRjVPaUF0ZDJWaWEybDBMV0p2ZUR0Y2JpQWdJQ0JrYVhOd2JHRjVPaUF0YlhNdFpteGxlR0p2ZUR0Y2JpQWdJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0FnSUMxM1pXSnJhWFF0WW05NExXOXlhV1Z1ZERvZ2RtVnlkR2xqWVd3N1hHNGdJQ0FnTFhkbFltdHBkQzFpYjNndFpHbHlaV04wYVc5dU9pQnViM0p0WVd3N1hHNGdJQ0FnSUNBZ0lDMXRjeTFtYkdWNExXUnBjbVZqZEdsdmJqb2dZMjlzZFcxdU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWm14bGVDMWthWEpsWTNScGIyNDZJR052YkhWdGJqc2dLaTljYmlBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpabVpsTmpBd08xeHVJQ0FnSUdOdmJHOXlPaUFqTURReU9XSmxPMXh1SUNBZ0lHMXBiaTFvWldsbmFIUTZJREV3TUhab08xeHVJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2JpQWdJQ0JzYVc1bExXaGxhV2RvZERvZ01TNDBPMXh1SUNBZ0lIQmhaR1JwYm1jdFltOTBkRzl0T2lBMU1IQjRPMXh1ZlZ4dVhHNHVhV1VnYURFZ2UxeHVJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREJ3ZUR0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURJdU5XVnRPMXh1ZlZ4dVhHNHVhV1VnY0NCN1hHNGdJQ0FnYldGeVoybHVMWFJ2Y0RvZ01DNHhaVzA3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF4TGpBMVpXMDdYRzRnSUNBZ2RHVjRkQzFoYkdsbmJqb2dhblZ6ZEdsbWVUdGNibjFjYmx4dUxtbGxJQzVvWldGa1pYSWdlMXh1SUNBZ0lIQmhaR1JwYm1jNklERXVOV1Z0SURNdU5XVnRJREV1TldWdE8xeHVJQ0FnSUdScGMzQnNZWGs2SUMxM1pXSnJhWFF0WW05NE8xeHVJQ0FnSUdScGMzQnNZWGs2SUMxdGN5MW1iR1Y0WW05NE8xeHVJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUNBZ0xYZGxZbXRwZEMxaWIzZ3RjR0ZqYXpvZ2FuVnpkR2xtZVR0Y2JpQWdJQ0FnSUNBZ0xXMXpMV1pzWlhndGNHRmphem9nYW5WemRHbG1lVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHcDFjM1JwWm5rdFkyOXVkR1Z1ZERvZ2MzQmhZMlV0WW1WMGQyVmxianRjYm4xY2JseHVMbWxsSUM1b1pXRmtaWElnTG14dloyOHRjR3hoSUh0Y2JpQWdJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEc0Z0lDQWdkMmxrZEdnNklERTJOWEI0TzF4dUlDQWdJR2hsYVdkb2REb2dOVFZ3ZUR0Y2JpQWdJQ0IwYjNBNklERXVOV1Z0TzF4dUlDQWdJR3hsWm5RNklESmxiVHRjYm4xY2JseHVMbWxsSUM1b1pXRmtaWElnTG14dloyOHRkbWdnZTF4dUlDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjYmlBZ0lDQjNhV1IwYURvZ01qRXdjSGc3WEc0Z0lDQWdhR1ZwWjJoME9pQTJOWEI0TzF4dUlDQWdJSFJ2Y0RvZ01TNDFaVzA3WEc0Z0lDQWdjbWxuYUhRNklESmxiVHRjYm4xY2JseHVMbWxsSUM1dFlXbHVJSHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJREZsYlR0Y2JpQWdJQ0J3WVdSa2FXNW5MWFJ2Y0RvZ01UQWxPMXh1SUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lDQWdabXhsZUMxa2FYSmxZM1JwYjI0NklHTnZiSFZ0Ymp0Y2JpQWdJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR05sYm5SbGNqdGNiaUFnSUNCaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHVmVnh1WEc0dWFXVWdMbTFoYVc0Z0xuUmxlSFFnY0M1bGJuUmxjaTFpZEc0Z2UxeHVJQ0FnSUcxaGNtZHBiam9nTW1WdElEQndlRHRjYmlBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYRzU5WEc1Y2JpNXBaU0F1YldGcGJpQXVkR1Y0ZENCd0xtVnVkR1Z5TFdKMGJpQXVZblYwZEc5dUlIdGNiaUFnSUNCamIyeHZjam9nSXpBME1qbGlaVHRjYmlBZ0lDQmlZV05yWjNKdmRXNWtPaUJ5WjJKaEtESTFOU3dnTWpVMUxDQXlOVFVzSURBcE8xeHVJQ0FnSUdadmJuUXRkMlZwWjJoME9pQmliMnhrTzF4dWZWeHVYRzR1YVdVZ0xtMWhhVzRnTG5CcFpXTmxJSHRjYmlBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUNBZ2VpMXBibVJsZURvZ01UQTdYRzRnSUNBZ2QybGtkR2c2SURJd01IQjRPMXh1SUNBZ0lHaGxhV2RvZERvZ1lYVjBienRjYmlBZ0lDQnNaV1owT2lCallXeGpLR05oYkdNb01UQXdkbmNnTFNBMU1EQndlQ2tnTHlBeUlDMGdNakV3Y0hncE8xeHVJQ0FnSUhSdmNEb2dZMkZzWXlneE1DVWdLeUF4TmpWd2VDazdYRzU5WEc1Y2JpTjFjMlZ5ZFhKcElIdGNiaUFnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hHNTlYRzVjYmtCdFpXUnBZU0J6WTNKbFpXNGdZVzVrSUNodFlYZ3RkMmxrZEdnNklERXdNREJ3ZUNrZ2UxeHVJQ0FnSUM1cFpTQXViV0ZwYmlBdWNHbGxZMlVnZTF4dUlDQWdJQ0FnSUNCMGIzQTZJR05oYkdNb01UQXdKU0F0SURJMU1IQjRLVHRjYmlBZ0lDQWdJQ0FnYkdWbWREb2dZMkZzWXlnMU1IWjNJQzBnTVRBd2NIZ3BPMXh1SUNBZ0lIMWNibHh1SUNBZ0lDNXBaU0F1Wm05dmRHVnlJSHRjYmlBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF6TURCd2VEdGNiaUFnSUNCOVhHNTlYRzVjYmlvZ2UxeHVJQ0FnSUMxM1pXSnJhWFF0WW05NExYTnBlbWx1WnpvZ1ltOXlaR1Z5TFdKdmVEdGNiaUFnSUNBZ0lDQWdJQ0FnSUdKdmVDMXphWHBwYm1jNklHSnZjbVJsY2kxaWIzZzdYRzRnSUNBZ1ptOXVkQzFtWVcxcGJIazZJQ2RTWVd4bGQyRjVKeXdnYzJGdWN5MXpaWEpwWmp0Y2JuMWNibHh1T25KdmIzUWdlMXh1SUNBZ0lDMHRZMjkyWlhJdFltY3RZMjlzYjNJNklDTm1abVUyTURBN1hHNGdJQ0FnTFMxMmFDMWtZWEpyTFdKc2RXVTZJQ013TkRJNVltVTdYRzRnSUNBZ0xTMTJhQzFpYkhWbE9pQWpNalkwUlVaQk8xeHVmVnh1WEc1b2RHMXNMQ0JpYjJSNUlIdGNiaUFnSUNCdFlYSm5hVzQ2SURBN1hHNGdJQ0FnY0dGa1pHbHVaem9nTUhCNE8xeHVJQ0FnSUcxcGJpMW9aV2xuYUhRNklERXdNQ1U3WEc0Z0lDQWdMWGRsWW10cGRDMWliM2d0YzJsNmFXNW5PaUJpYjNKa1pYSXRZbTk0TzF4dUlDQWdJQ0FnSUNBZ0lDQWdZbTk0TFhOcGVtbHVaem9nWW05eVpHVnlMV0p2ZUR0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURFNGNIZzdYRzRnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREV1Tnp0Y2JuMWNibHh1ZFd3Z2UxeHVJQ0FnSUhCaFpHUnBibWM2SURCd2VEdGNiaUFnSUNCc2FYTjBMWE4wZVd4bE9pQnViMjVsTzF4dWZWeHVYRzR1WTJWdWRHVnlaV1FnZTF4dUlDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjYmlBZ0lDQXRkMlZpYTJsMExXSnZlQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHVJQ0FnSUNBZ0lDQXRiWE10Wm14bGVDMWhiR2xuYmpvZ1kyVnVkR1Z5TzF4dUlDQWdJQ0FnSUNBZ0lDQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjYmlBZ0lDQXRkMlZpYTJsMExXSnZlQzF3WVdOck9pQmpaVzUwWlhJN1hHNGdJQ0FnSUNBZ0lDMXRjeTFtYkdWNExYQmhZMnM2SUdObGJuUmxjanRjYmlBZ0lDQWdJQ0FnSUNBZ0lHcDFjM1JwWm5rdFkyOXVkR1Z1ZERvZ1kyVnVkR1Z5TzF4dWZWeHVYRzR1ZEdWNGRDQjdYRzRnSUNBZ2QybGtkR2c2SURVd01IQjRPMXh1SUNBZ0lHMWhjbWRwYmpvZ00yVnRJR0YxZEc4Z1lYVjBienRjYm4xY2JseHVZblYwZEc5dUxtSjFkSFJ2YmlCN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ0kyWm1abVptWmpBd08xeHVJQ0FnSUdKdmNtUmxjam9nTVhCNElITnZiR2xrTzF4dUlDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklEVndlRHRjYmlBZ0lDQjNhV1IwYURvZ016QXdjSGc3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF4TGpKbGJUdGNiaUFnSUNCamIyeHZjam9nZDJocGRHVTdYRzRnSUNBZ2NHRmtaR2x1WnpvZ0xqaGxiVHRjYmlBZ0lDQmpkWEp6YjNJNklIQnZhVzUwWlhJN1hHNGdJQ0FnTFhkbFltdHBkQzEwY21GdWMybDBhVzl1T2lCaVlXTnJaM0p2ZFc1a0lETXdNRzF6TzF4dUlDQWdJSFJ5WVc1emFYUnBiMjQ2SUdKaFkydG5jbTkxYm1RZ016QXdiWE03WEc1OVhHNWNibUoxZEhSdmJpNWlkWFIwYjI0dVlteGhZMnNnZTF4dUlDQWdJR0poWTJ0bmNtOTFibVE2SUNNd01EQXdNREF3TUR0Y2JpQWdJQ0JqYjJ4dmNqb2dZbXhoWTJzN1hHNTlYRzVjYm1KMWRIUnZiaTVpZFhSMGIyNDZhRzkyWlhJZ2UxeHVJQ0FnSUdKaFkydG5jbTkxYm1RNklDTm1abVptWm1ZMU5UdGNibjFjYmx4dVluVjBkRzl1TG1KMWRIUnZiaTVpYkdGamF6cG9iM1psY2lCN1hHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ0l6QXdNREF3TURNek8xeHVmVnh1WEc1QWJXVmthV0VnYjI1c2VTQnpZM0psWlc0Z1lXNWtJQ2h0WVhndGQybGtkR2c2SURjd01IQjRLU0JoYm1RZ0tHOXlhV1Z1ZEdGMGFXOXVPaUJ3YjNKMGNtRnBkQ2tnZTF4dUlDQWdJQzUwWlhoMElIdGNiaUFnSUNBZ0lDQWdkMmxrZEdnNklETXdNSEI0TzF4dUlDQWdJSDFjYmx4dUlDQWdJR0oxZEhSdmJpNWlkWFIwYjI0Z2UxeHVJQ0FnSUNBZ0lDQjNhV1IwYURvZ01UVXdjSGc3WEc0Z0lDQWdmVnh1ZlZ4dUx5b2pJSE52ZFhKalpVMWhjSEJwYm1kVlVrdzlaR0YwWVRwaGNIQnNhV05oZEdsdmJpOXFjMjl1TzJKaGMyVTJOQ3hsZVVveVdsaEtlbUZYT1hWSmFtOTZURU5LZW1JelZubFpNbFo2U1dwd1lrbHBOSFZNZVRSMVRESk9lbU41T1hCYVV6VnFZek5OYVZoVGQybGliVVowV2xoTmFVOXNkR1JNUTBwMFdWaENkMkZYTlc1amVVazJTV3RHUWxGVlJUZFRWVVpFVTFSek4wOTZjemRQTTBaRVVWVk9hazh3YkVKUk1sRnpaVlZLUWxGWGJFTlBNR3hDVVRKd1EweEhUa0pSVlVVM1UxVkdSRk5wZUhCUmEwWkNVVlIwU2xGVlRrcE1SM1JEVVZWR2NsRnFkRXBSVlU0d1VXbDRibEZyUmtKUlZIUktVVlZPUWt4SE9VTlJWVVpDVHpCR1FsUlZSVGRQTUVaQ1VsVkZOMDh3YkVKVFJVVnpZVEJLUWxGVlJUZFJWVVpPVVZSek4xRlZSa1pSVkhSS1VWVndTa3hIYkVOUlZVWndVV3AwU2xGVlRubFJhWGh3VVd0R1FsRlVkRXBSVlU1Q1RFY3hRMUZWUmtKUE1FWkNWRlZGTjA4d1JrSlNWVVUzVTFWR1MxTlRkM2RSYTBaQ1VWUjBTbEZWVGtKTVJ6bERVVlZHUWs4d2JFSlJNRzl6WWpCS1FsRlZSVGRUVlVaRVVWTjRhRkZWUmtKUE1HeENWRlZyYzJWVlNrSlVSVVUzVlZWR1RsTlRlSHBSYTBaTlZXcDBXbEZWVGtKTVJHaERVVlZHUWs4d1JrSlVWVVUzVHpCR1FsSlZSVGRUVlVaTFVWTjRjbEZyUmtKUlZIUktVVlZPUWt4R2JFSlJWVVUzVTFWR1RsTlRlRnBSVlVaYVR6QnNRbE50YUVOTVJsWkNVVlZGTjFOVlJrUlRVM2hVVVZWR1FrOHdSa0pVVlc4M1R6QkdRbEpWUlRkVFZVWkxVVk40Y2xGclJrSlJWSFJLVVZWT1FreEdiRUpSVlVVM1UxVkdSRkZUZUZwUlZVWkNUekJzUWxSVmEzTldWVVpDVmxSMFNsRlZjR3RNUmxaQ1VWVkZOMUZWUms1UlZITTNVVlZHU1ZGVWRFcFJWVEZLVEVka1ExRlZSbTVSYW5SQ1VWVndkMUZxY3pkUlZVWlFVVlIwU2xGVmNFSk1SMVpDVVZWRk4xTlZSa1JSVTNoeVVXdEdRbEZVZEVKUlZURkNUM3AwUWxGVlZrSlBNR3hDVTJ0cmMxa3dSa0pSVkhSS1VWVk9Ra3hIZEVSUlZVWkNUekJzUWxFd2IzTmhWVXBDVVZWRk4xRlZSazVSVkhNM1VWVkdTVkZVZEVwUlZURktURWRHUWxGWFJUZFRWVVpMWVd0SmMyRXdTa0pSVlVVM1UxVkdSRkZUZUZoUlZVWkNUekJzUWxSVmEzTlhWVVpOVTFSMFNsRlZNVXRNUm14Q1ZFVkZOMU5WUmtSUlUzaFVVVlZHUWs4d2JFSlVWVVZ6VmxWR1FsWlVkRUpSVlU1clQzcDBRbEZWVmtKUE1HeENVMnRGYzJFd1NrSlJWVVUzVVZWR1RsRlVjemRSVlVaR1VWUjBTbEZWVGtwUE1VWkNVVEJGYzJSVlNrSlJWVVUzVlZWR1MxTnBlRE5SYTBaQ1VWUjBTbEZWTVVwUGVuUktVVlZvUzA4eFJrSlJNRVZ6V1ZWR1FsRlVkRXBSVlRGS1R6QkdRbE5yYnpkUE1FWkNWREJGTjFOVlJrdFJVM2MwVVd0R1FsRlVkRnBSVlU1Q1RFaE9RMUZWUmtKUE1HeENWRlZyYzJFd1RrSlJWbXMzVVZWR1JHRkZTVGRQTUVaQ1VsVkZOMU5WUms5VFUzZzFVV3RHUWxGVWRFcFJWa1pMVEVoV1ExRlZSa0pQTUd4Q1VUQnJjMkV3U2tKUlYzUkRUekJHUWxFelVrTlBlblJDVVZWV1FrOHdiRUpSTUVWelZUQkdRbEZVZEVwUlZVNUtURVpzUWxGV2F6ZFRWVVpFWVVWSmMxb3dTa0pSVlVVM1UxVkdTMUZUZHpSUmEwWkNVVlIwV2xGVlRrSk1TRTVEVVZWR1FrOHdiRUpVVld0eldsVkdRbE5VZEVwUlZVNUxURWRrUTFGVmVFdFBNRVpDVkZWRk4wOHdSa0pTVlVVM1UxVkdSRkZUZUZwUlZVWkNUekJzUWxFd2EzTmFNRXBDVVZka1EwOHdSa0pSTTBKRFQzcDBRbEZWVmtKUE1HeENVVEJGYzJFd1NrSlJWVVUzVTFWR1JGTlRlRFZSYTBaQ1pWVkpOMVZWUmtST01FbHpZekJLUWxGVlJUZFhWVVpaVVZONGRGRnJSa0pSVkhSS1VWWkdRa3hJWkVOUlZVWkNUekZHUWxSVmEzTmpWVXBDVVZkMFEwOHhiRUpUYmxKRFRFaFdRMUZWUmtKUE1FWkNWRlZGTjA4d1JrSlNWVVUzVTFWR1dWRlRlRnBSVlVaQ1R6QnNRbEV3YTNOalZVcENVVlZGTjFGVlJtaFRhbk0zVVZWR1JsRlVkRXBSVlU1Q1RFaEdRMUZWUmtKUE1HeENWMFZGYzJGVlNrSlJWVVUzVTFWR1VsRlRlSEpSYTBaQ1VWUjBTbEZWTVVKTVJteENVVlZGTjFOVlJrUlRVM2h1VVd0R1Fsb3dTVGRUVlVaRVkwVkpjMWRWUmtKUlZIUktVVlZ3UWt4SFJrSlJWVVUzVTFWR1JGRlRlR3hSVlVaQ1R6QnNRbFJWYTNOaU1FNUNVVmM1UkU4d2JFSlRibWhFVEVSU1ExRlZSa0pQTUVaQ1ZGVkZOMDh3UmtKU1ZVVTNVMVZHUzFGVGVIaFJhMFpDVVZSMFNsRlZUa0pNUm14Q1VWVkZOMUZWUms1UlZITTNVVlZHUmxGVWRFcFJWWEJLVEVoR1ExRlZSa0pQTUVaQ1ZGVnZOMDh3UmtKU1ZVVTNVMVZHUkZOVGVIaFJhMFpDWTFWSk4xRlZSa1JsYTBrM1R6QkdRbEpWUlRkVFZVWkVVMVIwVWxGVlRrcE1SbXhDVVZack4xTlZSa1JoUlVrM1R6QnNRbEpWUlRkVlZVWkVVMU40V2xGVlJscFBNR3hDVVRKb1EwOHdSa0pSTUc5cFRFTktiV0ZYZUd4SmFtOXBZVmRWZFZrelRucEphWGRwWXpJNU1XTnRUbXhqTUU1MlltNVNiR0p1VVdsUGJITnBURzFzYkVsSWRHTmlhVUZuU1VOQ2FWbFhUbkphTTBwMlpGYzFhMHhYVG5aaVJ6bDVUMmxCYWxwdFdteE9ha0YzVHpGNGRVbERRV2RKUjA1MllrYzVlVTlwUVdwTlJGRjVUMWRLYkU4eGVIVkpRMEZuU1VjeGNHSnBNVzlhVjJ4dVlVaFJOa2xFUlhkTlNGcHZUekY0ZFVsRFFXZEpTRUoyWXpKc01HRlhPWFZQYVVKNVdsZDRhR1JIYkRKYVZIUmpZbTR4WTJKc2VIVk1iV3hzU1VNMWIxcFhSbXRhV0VsblpURjRkVWxEUVdkSlNFSm9Xa2RTY0dKdFl6WkpSRVYxVGxkV2RFbEVUWFZPVjFaMFNVUkZkVTVYVm5SUE1YaDFTVU5CWjBsSFVuQmpNMEp6V1Zock5rbERNVE5hVjBweVlWaFJkRmx0T1RSUE1YaDFTVU5CWjBsSFVuQmpNMEp6V1Zock5rbERNWFJqZVRGdFlrZFdORmx0T1RSUE1YaDFTVU5CWjBsSFVuQmpNMEp6V1Zock5rbEhXbk5hV0djM1dFYzBaMGxEUVdkTVdHUnNXVzEwY0dSRE1XbGlNMmQwWTBkR2FtRjZiMmRoYmxaNlpFZHNiV1ZVZEdOaWFVRm5TVU5CZEdKWVRYUmFiWGhzWlVNeGQxbFhUbkpQYVVKeFpGaE9NR0ZYV2pWUE1YaDFTVU5CWjBsSGNERmpNMUp3V201cmRGa3lPWFZrUjFaMVpFUnZaMk16UW1oWk1sVjBXVzFXTUdReVZteGlhblJqWW00eFkySnNlSFZNYld4c1NVTTFiMXBYUm10YVdFbG5URzE0ZGxveU9IUmpSM2hvU1VoMFkySnBRV2RKUTBJellWZFNNR0ZFYjJkTlZGa3hZMGhuTjFoSE5HZEpRMEZuWVVkV2NGb3lhREJQYVVFeVRsaENORTh4ZUhWbVZuaDFXRWMwZFdGWFZXZE1iV2hzV1ZkU2JHTnBRWFZpUnpsdVlua3hNbUZEUWpkWVJ6Um5TVU5CWjJReWJHdGtSMmMyU1VSSmVFMUlRalJQTVhoMVNVTkJaMGxIYUd4aFYyUnZaRVJ2WjA1cVZuZGxSSFJqWW00eFkySnNlSFZNYld4c1NVTTFkRmxYYkhWTWJsSnNaVWhSWjJVeGVIVkpRMEZuU1VoQ2FGcEhVbkJpYldOMFpFYzVkMDlwUVhsYVZ6QTNXRWMxT1ZoSE5XTmlhVFZ3V2xOQmRXSlhSbkJpYVRVd1dsaG9NRWxJUVhWYVZ6VXdXbGhKZEZsdVVuVkpTSFJqWW1sQlowbERRblJaV0VwdVlWYzBOa2xFU214aVUwRjNZMGhuTjFoSE5HZEpRMEZuWkVkV05HUkRNV2hpUjJ4dVltcHZaMWt5Vm5Wa1IxWjVUekY0ZFdaV2VIVllSelIxWVZkVloweHRNV2hoVnpSMVpFZFdOR1JEUW5kTWJWWjFaRWRXZVV4WFNqQmlhVUYxV1c1V01HUkhPWFZKU0hSalltbEJaMGxEUW1waU1uaDJZMnB2WjBsNlFUQk5hbXhwV2xSMFkySnBRV2RKUTBKcFdWZE9jbG96U25aa1Z6VnJURmRPZG1KSE9YbFBhVUZxV20xYWJWcHRXbTFOUkVFM1dFYzBaMGxEUVdkYWJUbDFaRU14TTFwWGJHNWhTRkUyU1VkS2RtSkhVVGRZUnpVNVdFYzFZMkpwTlhCYVUwRjFZbGRHY0dKcE5UQmFXR2d3U1VNMWQyRlhWbXBhVTBJM1dFYzBaMGxEUVdkalJ6bDZZVmhTY0dJeU5EWkpSMFpwWXpJNWMyUllVbXhQTVhoMVNVTkJaMGxJYjNSaFZ6VnJXbGhuTmtsRVJYZFBNWGgxU1VOQlowbElaSEJhU0ZKdlQybEJlVTFFUW5kbFJIUmpZbWxCWjBsRFFtOWFWMnh1WVVoUk5rbEhSakZrUnpnM1dFYzBaMGxEUVdkaVIxWnRaRVJ2WjFreVJuTlplV2hxV1ZkNGFrdEVSWGROU0ZvelNVTXdaMDVVUVhkalNHZHdTVU00WjAxcFFYUkpSRWw0VFVoQ05FdFVkR05pYVVGblNVTkNNR0l6UVRaSlIwNW9Za2ROYjAxVVJYZGpTR2RuUzNsQk1WcFhNSEJQTVhoMVpsWjRkVmhITlVGaVYxWnJZVmRGWjJNeVRubGFWMVoxU1VkR2RWcERRVzlpVjBZMFRGaGtjRnBJVW05UGFVRjRUVVJCZDJOSVozQkpTSFJqWW1sQlowbERRWFZoVjFWblRHMHhhR0ZYTkhWa1IxWTBaRU5CZFdOSGJHeFpNbFZuWlRGNGRVbERRV2RKUTBGblNVTkNNR0l6UVRaSlIwNW9Za2ROYjAxVVFYZEtVMEYwU1VSSk1VMUlRalJMVkhSalltbEJaMGxEUVdkSlEwRm5Za2RXYldSRWIyZFpNa1p6V1hsbk1VMUlXak5KUXpCblRWUkJkMk5JWjNCUE1YaDFTVU5CWjBsSU1XTmliSGgxU1VOQlowbEROWEJhVTBGMVdtMDVkbVJIVm5sSlNIUmpZbWxCWjBsRFFXZEpRMEZuWVVkV2NGb3lhREJQYVVGNlRVUkNkMlZFZEdOaWFVRm5TVU5DT1ZoSE5UbFlSelZqWW14NGRWRkhiSFJqUnpsNVpFTkNNV050ZDI5S2VUbDZaRWRHTUdGWFRYWlpNMDU2VERCa2FHSlhWWFZaTTA1NlNubHJOMWhITlVGaFZ6RjNZak5LTUVsSVZubGlRMmR1VEROT01GbFlVbkJaZVRscVl6Tk5kbEV5T1RKYVdFbDFXVE5PZWtwNWF6ZFlSelZqWW1sdloyVXhlSFZKUTBGblNVZEtkbVZETVhwaFdIQndZbTFqTmtsSFNuWmpiVkpzWTJreGFXSXpaemRZUnpSblNVTkJaMXB0T1hWa1F6RnRXVmN4Y0dKSWF6WkpRMlJUV1ZkNGJHUXlSalZLZVhkbll6SkdkV041TVhwYVdFcHdXbXAwWTJKdU1XTmliSGgxVDI1S2RtSXpVV2RsTVhoMVNVTkJaMGxETUhSWk1qa3lXbGhKZEZsdFkzUlpNamx6WWpOSk5rbERUbTFhYlZVeVRVUkJOMWhITkdkSlEwRm5URk14TW1GRE1XdFpXRXB5VEZkS2MyUlhWVFpKUTAxM1RrUkpOVmx0VlRkWVJ6Um5TVU5CWjB4VE1USmhRekZwWWtoV2JFOXBRV3BOYWxrd1VsVmFRazh4ZUhWbVZuaDFXRWMxYjJSSE1YTk1RMEpwWWpKU05VbElkR05pYVVGblNVTkNkRmxZU201aFZ6UTJTVVJCTjFoSE5HZEpRMEZuWTBkR2ExcEhiSFZhZW05blRVaENORTh4ZUhWSlEwRm5TVWRvYkdGWFpHOWtSRzluVFZSQmQwcFVkR05pYVVGblNVTkNhV0l6WjNSak1tdzJZVmMxYms5cFFtbGlNMHByV2xoSmRGbHRPVFJQTVhoMVNVTkJaMGxIV25aaWJsRjBZekpzTmxwVWIyZE5WR2gzWlVSMFkySnBRV2RKUTBKellWYzFiRXhYYUd4aFYyUnZaRVJ2WjAxVE5ETlBNWGgxWmxaNGRWaEhOVEZpUTBJM1dFYzBaMGxEUVdkalIwWnJXa2RzZFZwNmIyZE5TRUkwVHpGNGRVbERRV2RKUjNod1l6TlJkR016VWpWaVIxVTJTVWMxZG1KdFZUZFlSelU1V0VjMVkySnBOV3BhVnpVd1dsaEtiRnBEUWpkWVJ6Um5TVU5CWjJSSFZqUmtRekZvWWtkc2JtSnFiMmRaTWxaMVpFZFdlVTh4ZUhWSlEwRm5TVWRHYzJGWFpIVk1WMnd3V2xjeGVrOXBRbXBhVnpVd1dsaEpOMWhITkdkSlEwRm5ZVzVXZW1SSGJHMWxVekZxWWpJMU1GcFhOVEJQYVVKcVdsYzFNRnBZU1RkWVJ6VTVXRWMxWTJKcE5UQmFXR2d3U1VoMFkySnBRV2RKUTBJellWZFNNR0ZFYjJkT1ZFRjNZMGhuTjFoSE5HZEpRMEZuWWxkR2VWb3liSFZQYVVGNldsY3daMWxZVmpCaWVVSm9aRmhTZGs4eGVIVm1WbmgxV0VjMWFXUllVakJpTWpSMVdXNVdNR1JIT1hWSlNIUmpZbWxCWjBsRFFtbFpWMDV5V2pOS2RtUlhOV3RQYVVGcVdtMWFiVnB0V20xTlJFRTNXRWMwWjBsRFFXZFpiVGw1V2tkV2VVOXBRWGhqU0dkbll6STVjMkZYVVRkWVJ6Um5TVU5CWjFsdE9YbGFSMVo1VEZoS2FGcEhiREZqZW05blRsaENORTh4ZUhWSlEwRm5TVWhrY0ZwSVVtOVBhVUY2VFVSQ2QyVkVkR05pYVVGblNVTkNiV0l5TlRCTVdFNXdaVzFWTmtsRVJYVk5iVlowVHpGNGRVbERRV2RKUjA1MllrYzVlVTlwUWpOaFIyd3dXbFIwWTJKcFFXZEpRMEozV1ZkU2EyRlhOVzVQYVVGMVQwZFdkRTh4ZUhWSlEwRm5TVWRPTVdOdVRuWmphbTluWTBjNWNHSnVVbXhqYW5SalltbEJaMGxEUWpCamJVWjFZekpzTUdGWE9YVlBhVUpwV1ZkT2Nsb3pTblprVnpWclNVUk5kMDFITVhwUE1YaDFabFo0ZFZoSE5XbGtXRkl3WWpJMGRWbHVWakJrUnpsMVRHMUtjMWxYVG5KSlNIUmpZbWxCWjBsRFFtbFpWMDV5V2pOS2RtUlhOV3RQYVVGcVRVUkJkMDFFUVhkTlJFRTNXRWMwWjBsRFFXZFpNamx6WWpOSk5rbEhTbk5aVjA1eVR6RjRkV1pXZUhWWVJ6VnBaRmhTTUdJeU5IVlpibFl3WkVjNWRVOXRhSFprYlZaNVNVaDBZMkpwUVdkSlEwSnBXVmRPY2xvelNuWmtWelZyVDJsQmFscHRXbTFhYlZwdFRsUlZOMWhITlRsWVJ6VmpZbTFLTVdSSVVuWmlhVFZwWkZoU01HSXlOSFZaYlhob1dUSnpObUZIT1RKYVdFbG5aVEY0ZFVsRFFXZEpSMHBvV1RKMGJtTnRPVEZpYlZFMlNVTk5kMDFFUVhkTlJFRjZUWHAwWTJKdU1XTmliSGgxVVVjeGJGcEhiR2hKUnpsMVlraHJaMk15VG5sYVYxWjFTVWRHZFZwRFFXOWlWMFkwVEZoa2NGcElVbTlQYVVFelRVUkNkMlZEYTJkWlZ6VnJTVU5vZG1OdGJHeGlibEpvWkVkc2RtSnFiMmRqUnpsNVpFaEthR0ZZVVhCSlNIUmpZbWxCWjBsRFFYVmtSMVkwWkVOQ04xaEhOR2RKUTBGblNVTkJaMGxJWkhCYVNGSnZUMmxCZWsxRVFuZGxSSFJqWW1sQlowbERRamxZUnpWalltbEJaMGxEUW1sa1dGSXdZakkwZFZsdVZqQmtSemwxU1VoMFkySnBRV2RKUTBGblNVTkJaMlF5Ykd0a1IyYzJTVVJGTVUxSVFqUlBNWGgxU1VOQlowbElNV05pYmpGalltbEtaR1pSUFQwZ0tpOGlYWDA9ICovIl19 */
